{"version":3,"sources":["redux/profile-reducer.js","api/api.js","redux/dialogs-reducer.js","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","assets/images/sn.png","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/Users/users.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","assets/images/user.png"],"names":["ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","initialState","posts","id","message","likesCount","profile","status","addPostActionCreator","newPostText","type","setStatus","getUserProfile","userId","dispatch","a","usersAPI","getProfile","response","data","getStatus","profileAPI","updateStatus","resultCode","savePhoto","file","photos","saveProfile","getState","auth","stopSubmit","_error","messages","Promise","reject","profileReducer","state","action","newPost","filter","p","postId","instance","axios","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","then","follow","post","unfollow","delete","put","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","SEND_MESSAGE","dialogs","name","sendMessageCreator","newMessageBody","dialogsReducer","body","module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","s","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","selectedPage","pageNumber","e","User","user","cardUser","alt","src","small","userPhoto","disabled","some","Users","cardInfo","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","sn","loginBlock","isAuth","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","length","INITIALIZED_SUCCESS","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","value","maxLengthCreator","maxLength"],"mappings":"+WAGMA,EAAW,WACXC,EAAmB,mBACnBC,EAAa,aACbC,EAAc,cACdC,EAAqB,qBAEvBC,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,qFAAqBC,WAAY,IAClD,CAACF,GAAI,EAAGC,QAAS,uCAAUC,WAAY,IACvC,CAACF,GAAI,EAAGC,QAAS,6CAAgBC,WAAY,IAC7C,CAACF,GAAI,EAAGC,QAAS,gHAAuBC,WAAY,KAExDC,QAAS,KACTC,OAAQ,IAuCCC,EAAuB,SAACC,GAAD,MAAkB,CAACC,KAAMd,EAAUa,gBAE1DE,EAAY,SAACJ,GAAD,MAAa,CAACG,KAAMZ,EAAYS,WAI5CK,EAAiB,SAACC,GAAD,8CAAY,WAAOC,GAAP,eAAAC,EAAA,sEACfC,IAASC,WAAWJ,GADL,OAChCK,EADgC,OAEtCJ,GAP2BR,EAOHY,EAASC,KAPO,CAACT,KAAMb,EAAkBS,aAK3B,iCALZ,IAACA,IAKW,OAAZ,uDAKjBc,EAAY,SAACP,GAAD,8CAAY,WAAOC,GAAP,eAAAC,EAAA,sEACZM,IAAWD,UAAUP,GADT,OAC7BK,EAD6B,OAEjCJ,EAASH,EAAUO,EAASC,OAFK,2CAAZ,uDAKZG,EAAe,SAACf,GAAD,8CAAY,WAAOO,GAAP,SAAAC,EAAA,+EAEXM,IAAWC,aAAaf,GAFb,OAIC,IAJD,OAInBY,KAAKI,YACdT,EAASH,EAAUJ,IALS,uGAAZ,uDAWfiB,EAAY,SAACC,GAAD,8CAAU,WAAOX,GAAP,eAAAC,EAAA,sEACVM,IAAWG,UAAUC,GADX,OAGE,KAF7BP,EAD2B,QAGlBC,KAAKI,YACdT,GA3ByBY,EA2BCR,EAASC,KAAKA,KAAKO,OA3BR,CAAChB,KAAMV,EAAoB0B,YAuBrC,iCAvBH,IAACA,IAuBE,OAAV,uDAOZC,EAAc,SAACrB,GAAD,8CAAa,WAAOQ,EAAUc,GAAjB,iBAAAb,EAAA,6DAC9BF,EAASe,IAAWC,KAAKhB,OADK,SAEbQ,IAAWM,YAAYrB,GAFV,UAIH,KAF3BY,EAF8B,QAIvBC,KAAKI,WAJkB,gBAKhCT,EAASF,EAAeC,IALQ,8BAOhCC,EAASgB,YAAW,eAAgB,CAACC,OAAQb,EAASC,KAAKa,SAAS,MAPpC,kBAQzBC,QAAQC,OAAOhB,EAASC,KAAKa,SAAS,KARb,4CAAb,yDAYZG,IAlFQ,WAAmC,IAAlCC,EAAiC,uDAAzBnC,EAAcoC,EAAW,uCAErD,OAAQA,EAAO3B,MACX,KAAKd,EACD,IAAI0C,EAAU,CACVnC,GAAI,EACJC,QAASiC,EAAO5B,YAChBJ,WAAY,GAEhB,OAAO,2BACA+B,GADP,IAEIlC,MAAM,GAAD,mBAAMkC,EAAMlC,OAAZ,CAAmBoC,IACxB7B,YAAa,KAGrB,KAAKX,EACD,OAAO,2BACAsC,GADP,IAEI7B,OAAQ8B,EAAO9B,SAGvB,KAAKV,EACD,OAAO,2BAAIuC,GAAX,IAAkB9B,QAAS+B,EAAO/B,UAGtC,KAAKP,EACD,OAAO,2BAAIqC,GAAX,IAAkBlC,MAAOkC,EAAMlC,MAAMqC,QAAO,SAAAC,GAAC,OAAIA,EAAErC,KAAOkC,EAAOI,YAErE,KAAKzC,EACD,OAAO,2BAAIoC,GAAX,IAAkB9B,QAAQ,2BAAK8B,EAAM9B,SAAZ,IAAqBoB,OAAQW,EAAOX,WACjE,QACI,OAAOU,K,gCCnDnB,qJAEMM,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAa,CACT,UAAW,0CAKN9B,EAAW,CACpB+B,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOP,EAASQ,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAjC,GACF,OAAOA,EAASC,SAG5BiC,OAPoB,SAObvC,GACH,OAAO6B,EAASW,KAAT,iBAAwBxC,KAEnCyC,SAVoB,SAUXzC,GACL,OAAO6B,EAASa,OAAT,iBAA0B1C,KAErCI,WAboB,SAaTJ,GACP,OAAOQ,EAAWJ,WAAWJ,KAIxBQ,EAAa,CACtBJ,WADsB,SACXJ,GACP,OAAO6B,EAASQ,IAAI,WAAarC,IAErCO,UAJsB,SAIZP,GACN,OAAO6B,EAASQ,IAAI,kBAAoBrC,IAE5CS,aAPsB,SAOTf,GACT,OAAOmC,EAASc,IAAT,iBAA+B,CAAEjD,OAAQA,KAEpDiB,UAVsB,SAUZiC,GACN,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElBf,EAASc,IAAT,gBAA8BE,EAAU,CAC3CZ,QAAS,CACL,eAAgB,0BAI5BnB,YApBsB,SAoBVrB,GACR,OAAOoC,EAASc,IAAT,UAAwBlD,KAI1BuD,EAAU,CACnBC,GADmB,WAEf,OAAOpB,EAASQ,IAAT,YAEXa,MAJmB,SAIbC,EAAOC,GAA+C,IAArCC,EAAoC,wDAAhBC,EAAgB,uDAAN,KACjD,OAAOzB,EAASW,KAAT,aAA4B,CAAEW,QAAOC,WAAUC,aAAYC,aAEtEC,OAPmB,WAQf,OAAO1B,EAASa,OAAT,gBAIFc,EAAc,CACvBC,cADuB,WAEnB,OAAO5B,EAASQ,IAAT,+B,sFCpETqB,EAAe,eAEjBtE,EAAe,CACfuE,QAAS,CACL,CAACrE,GAAI,EAAGsE,KAAM,4BACd,CAACtE,GAAI,EAAGsE,KAAM,wCACd,CAACtE,GAAI,EAAGsE,KAAM,4BACd,CAACtE,GAAI,EAAGsE,KAAM,kCACd,CAACtE,GAAI,EAAGsE,KAAM,UACd,CAACtE,GAAI,EAAGsE,KAAM,mCAElBzC,SAAU,CACN,CAAC7B,GAAI,EAAGC,QAAS,wCACjB,CAACD,GAAI,EAAGC,QAAS,gDACjB,CAACD,GAAI,EAAGC,QAAS,sBACjB,CAACD,GAAI,EAAGC,QAAS,kEACjB,CAACD,GAAI,EAAGC,QAAS,QAiBZsE,EAAqB,SAACC,GAAD,MAAqB,CAACjE,KAAM6D,EAAcI,mBAG7DC,IAhBQ,WAAmC,IAAlCxC,EAAiC,uDAAzBnC,EAAcoC,EAAW,uCACrD,OAAQA,EAAO3B,MACX,KAAK6D,EACD,IAAIM,EAAOxC,EAAOsC,eAClB,OAAO,2BACAvC,GADP,IAEIJ,SAAS,GAAD,mBAAMI,EAAMJ,UAAZ,CAAsB,CAAC7B,GAAI,EAAGC,QAASyE,OAEvD,QACI,OAAOzC,K,qFC5BnB0C,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,gMCG/EC,EAAc,SAAC,GAAyC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACrCC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,IAAtE,UACI,8BACKC,IAEJC,GAAY,+BAAOF,QAKnBM,EAAW,SAACC,GAAW,IACzBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADW,YACYH,EADZ,2BAE/B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,oDAAcC,GAAWC,QAG/CE,EAAQ,SAACJ,GAAW,IACtBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADQ,YACeH,EADf,2BAE5B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,iDAAWC,GAAWC,QAG5CG,EAAc,SAACC,EAAavB,EAAMwB,EAAYC,GAAhC,IAA2CR,EAA3C,uDAAmD,GAAIS,EAAvD,uDAA8D,GAA9D,OACvB,gCACI,cAAC,IAAD,aAAOH,YAAaA,EAAavB,KAAMA,EAChC2B,SAAUH,EACVC,UAAWA,GACPR,IAJf,IAKQS,O,mDCpBQE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gHCYSC,EA1BA,WACX,OACI,sBAAKpB,UAAWqB,IAAEC,IAAlB,UACI,qBAAKtB,UAAWqB,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,0DAEJ,qBAAK1B,UAAS,UAAKqB,IAAEE,KAAP,YAAeF,IAAEM,QAA/B,SACI,cAAC,IAAD,CAASH,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,sEAEJ,qBAAK1B,UAAS,UAAKqB,IAAEE,KAAP,YAAeF,IAAEM,QAA/B,SACI,cAAC,IAAD,CAASH,GAAG,SAASC,gBAAiBJ,IAAEK,WAAxC,4F,+DCbHE,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCHTC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAA+B,+BAEjC9H,EAAe,CACf+H,MAAO,GACP/E,SAAU,GACVgF,gBAAiB,EACjBjF,YAAa,EACbkF,YAAY,EACZC,oBAAqB,GACrBC,KAAM,IAyCGC,EAAgB,SAACxH,GAAD,MAAa,CAACH,KAAM+G,EAAQ5G,WAC5CyH,EAAkB,SAACzH,GAAD,MAAa,CAACH,KAAMgH,EAAU7G,WAEhD0H,EAAiB,SAACvF,GAAD,MAAkB,CAACtC,KAAMkH,EAAkB5E,gBAE5DwF,EAAmB,SAACN,GAAD,MAAiB,CAACxH,KAAMoH,EAAoBI,eAC/DO,EAA0B,SAACP,EAAYrH,GAAb,MAAyB,CAC5DH,KAAMqH,EACNG,aACArH,WAeE6H,EAAkB,uCAAG,WAAO5H,EAAUD,EAAQ8H,EAAWC,GAApC,SAAA7H,EAAA,6DACvBD,EAAS2H,GAAwB,EAAM5H,IADhB,SAEF8H,EAAU9H,GAFR,OAIU,IAJV,OAIVM,KAAKI,YACdT,EAAS8H,EAAc/H,IAE3BC,EAAS2H,GAAwB,EAAO5H,IAPjB,2CAAH,4DAqBTgI,EAnFM,WAAmC,IAAlCzG,EAAiC,uDAAzBnC,EAAcoC,EAAW,uCACnD,OAAQA,EAAO3B,MACX,KAAK+G,EACD,OAAO,2BACArF,GADP,IAEI4F,MAAOd,EAAoB9E,EAAM4F,MAAO3F,EAAOxB,OAAQ,KAAM,CAACiI,UAAU,MAEhF,KAAKpB,EACD,OAAO,2BACAtF,GADP,IAEI4F,MAAOd,EAAoB9E,EAAM4F,MAAO3F,EAAOxB,OAAQ,KAAM,CAACiI,UAAU,MAEhF,KAAKnB,EACD,OAAO,2BAAIvF,GAAX,IAAkB4F,MAAO3F,EAAO2F,QAEpC,KAAKJ,EACD,OAAO,2BAAIxF,GAAX,IAAkBY,YAAaX,EAAOW,cAE1C,KAAK6E,EACD,OAAO,2BAAIzF,GAAX,IAAkB6F,gBAAiB5F,EAAO0G,QAE9C,KAAKjB,EACD,OAAO,2BAAI1F,GAAX,IAAkB8F,WAAY7F,EAAO6F,aAEzC,KAAKH,EACD,OAAO,2BACA3F,GADP,IAEI+F,oBAAqB9F,EAAO6F,WAAP,sBACX9F,EAAM+F,qBADK,CACgB9F,EAAOxB,SACtCuB,EAAM+F,oBAAoB5F,QAAO,SAAApC,GAAE,OAAIA,IAAOkC,EAAOxB,YAGnE,QACI,OAAOuB,I,2DCbJ4G,EArCC,SAAC,GAKb,IAL4F,IAA9EC,EAA6E,EAA7EA,gBAAiBhG,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,YAAakG,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EAEvFC,EAAaC,KAAKC,KAAKL,EAAkBhG,GAEzCsG,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GATiD,EAUnDQ,mBAAS,GAV0C,mBAUtFC,EAVsF,KAUvEC,EAVuE,KAWvFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAG7C,OAAO,sBAAK7D,UAAW0E,IAAGzE,IAAO0E,WAA1B,UACDL,EAAgB,GAClB,wBAAQM,QAAS,WAAQL,EAAiBD,EAAgB,IAA1D,SAAiE,OAE5DL,EACIhH,QAAO,SAAAC,GAAC,OAAIA,GAAKsH,GAAyBtH,GAAGuH,KAC7CxC,KAAI,SAAC/E,GACN,OAAO,sBAAM8C,UAAY0E,IAAG,eACvBzE,IAAO4E,aAAenH,IAAgBR,GACxC+C,IAAO6E,YAEGF,QAAS,SAACG,GACNnB,EAAc1G,IALxB,SAMUA,GAHCA,MAKxBkH,EAAeE,GACb,wBAAQM,QAAS,WAAQL,EAAiBD,EAAgB,IAA1D,SAAiE,W,yBCM9DU,EAnCJ,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMpC,EAA4C,EAA5CA,oBAAqB7E,EAAuB,EAAvBA,SAAUF,EAAa,EAAbA,OAC/C,OACI,sBAAKkC,UAAWC,IAAOiF,SAAvB,UACI,iCACI,8BACI,cAAC,IAAD,CAAS1D,GAAI,YAAcyD,EAAKpK,GAAhC,SACI,qBAAKsK,IAAI,GAAGC,IAA0B,MAArBH,EAAK7I,OAAOiJ,MAAgBJ,EAAK7I,OAAOiJ,MAAQC,IAC7DtF,UAAWC,IAAOqF,gBAG9B,8BACKL,EAAKzB,SACA,wBAAQ+B,SAAU1C,EACf2C,MAAK,SAAA3K,GAAE,OAAIA,IAAOoK,EAAKpK,MACxB+J,QAAS,WAAQ5G,EAASiH,EAAKpK,KAFjC,oGAIA,wBAAQ0K,SAAU1C,EAAoB2C,MAAK,SAAA3K,GAAE,OAAIA,IAAOoK,EAAKpK,MAC3D+J,QAAS,WAAQ9G,EAAOmH,EAAKpK,KAD/B,qFAMd,iCACI,iCACI,8BAAMoK,EAAK9F,OACX,8BAAM8F,EAAKhK,YAEf,iCACI,8BAAM,0BACN,8BAAM,iCCXXwK,EAlBH,SAAC,GAA8E,IAA7E/H,EAA4E,EAA5EA,YAAaiF,EAA+D,EAA/DA,gBAAiBhF,EAA8C,EAA9CA,SAAUiG,EAAoC,EAApCA,cAAelB,EAAqB,EAArBA,MAAUtC,EAAW,oFACtF,OAAO,sBAAKJ,UAAWC,IAAOyF,SAAvB,UACH,cAAC,EAAD,CAAWhI,YAAaA,EAAakG,cAAeA,EACzCD,gBAAiBhB,EAAiBhF,SAAUA,IACvD,8BAEQ+E,EAAMT,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAM+C,KAAM/C,EACNW,oBAAqBzC,EAAMyC,oBAE3B7E,SAAUoC,EAAMpC,SAChBF,OAAQsC,EAAMtC,QAFToE,EAAErH,a,2BCR/B4C,GAAWkI,cAJC,SAAC7I,GACtB,OAAOA,EAAM8I,UAAUlD,SAIvB,SAACA,GACD,OAAOA,EAAMzF,QAAO,SAAAiF,GAAC,OAAI,QAGhB2D,GAAc,SAAC/I,GACxB,OAAOA,EAAM8I,UAAUjI,UAGdmI,GAAqB,SAAChJ,GAC/B,OAAOA,EAAM8I,UAAUjD,iBAGdoD,GAAiB,SAACjJ,GAC3B,OAAOA,EAAM8I,UAAUlI,aAGdsI,GAAgB,SAAClJ,GAC1B,OAAOA,EAAM8I,UAAUhD,YAEdqD,GAAyB,SAACnJ,GACnC,OAAOA,EAAM8I,UAAU/C,qBCRrBqD,G,4MAMFtC,cAAgB,SAACkB,GAAgB,IACtBnH,EAAY,EAAKyC,MAAjBzC,SACP,EAAKyC,MAAM3C,SAASqH,EAAYnH,I,kEAPf,IAAD,EACgBwI,KAAK/F,MAA9B1C,EADS,EACTA,YAAaC,EADJ,EACIA,SACpBwI,KAAK/F,MAAM3C,SAASC,EAAaC,K,+BAUjC,OAAO,qCACFwI,KAAK/F,MAAMwC,WAAa,cAACwD,EAAA,EAAD,IAAe,KACxC,cAAC,EAAD,CAAOzD,gBAAiBwD,KAAK/F,MAAMuC,gBAC5BhF,SAAUwI,KAAK/F,MAAMzC,SACrBD,YAAayI,KAAK/F,MAAM1C,YACxBkG,cAAeuC,KAAKvC,cACpBlB,MAAOyD,KAAK/F,MAAMsC,MAClB5E,OAAQqI,KAAK/F,MAAMtC,OACnBE,SAAUmI,KAAK/F,MAAMpC,SACrB6E,oBAAqBsD,KAAK/F,MAAMyC,6B,GAtBtBwD,IAAMC,WAwCpBC,gBACXC,aAbkB,SAAC1J,GACnB,MAAO,CACH4F,MAAOjF,GAASX,GAChBa,SAAUkI,GAAY/I,GACtB6F,gBAAiBmD,GAAmBhJ,GACpCY,YAAaqI,GAAejJ,GAC5B8F,WAAYoD,GAAclJ,GAC1B+F,oBAAqBoD,GAAuBnJ,MAMvB,CAACgB,OLiCR,SAACvC,GACnB,8CAAO,WAAOC,GAAP,SAAAC,EAAA,sDACH2H,EAAmB5H,EAAUD,EAAQG,IAASoC,OAAO2I,KAAK/K,KAAWqH,GADlE,2CAAP,uDKlCkC/E,SLsCd,SAACzC,GACrB,8CAAO,WAAOC,GAAP,SAAAC,EAAA,sDACH2H,EAAmB5H,EAAUD,EAAQG,IAASsC,SAASyI,KAAK/K,KAAWsH,GADpE,2CAAP,uDKvC4CC,iBAAgBE,0BAAyB1F,SLW7D,SAACiJ,EAAM/I,GAC/B,8CAAO,WAAOnC,GAAP,eAAAC,EAAA,6DACHD,EAAS0H,GAAiB,IAC1B1H,EAASyH,EAAeyD,IAFrB,SAIchL,IAAS+B,SAASiJ,EAAM/I,GAJtC,OAIC9B,EAJD,OAKHL,EAAS0H,GAAiB,IAC1B1H,GAjBiBkH,EAiBC7G,EAAKgG,MAjBK,CAACzG,KAAMiH,EAAWK,WAkB9ClH,GAhB2BmH,EAgBC9G,EAAK8K,WAhBe,CAACvL,KAAMmH,EAAuBkB,MAAOd,KASlF,iCATuB,IAACA,EAFVD,IAWd,OAAP,yDKbW6D,CAEbL,I,oBC7Da,OAA0B,+BCmB1BU,GAdA,SAACxG,GACZ,OAAO,yBAAQJ,UAAWqB,KAAEwF,OAArB,UACH,qBAAK1B,IAAI,GAAGC,IAAK0B,KAEjB,qBAAK9G,UAAWqB,KAAE0F,WAAlB,SAEM3G,EAAM4G,OACF,gCAAM5G,EAAM3B,MAAZ,KAAoB,wBAAQmG,QAASxE,EAAMtB,OAAvB,4CAApB,OACA,cAAC,IAAD,CAAS0C,GAAI,SAAb,wG,SCVZyF,GAAgB,qCAChBC,GAA0B,+CAE5BvM,GAAe,CACfY,OAAQ,KACRmD,MAAO,KACPD,MAAO,KACPuI,QAAQ,EACRG,WAAY,MAiBHC,GAAkB,SAAC7L,EAAQmD,EAAOD,EAAOuI,GAAvB,MAAmC,CAC9D5L,KAAM6L,GAAeI,QACjB,CAAC9L,SAAQmD,QAAOD,QAAOuI,YAGlBM,GAAuB,SAACH,GAAD,MAAiB,CACjD/L,KAAM8L,GAAyBG,QAAS,CAACF,gBAGhCI,GAAkB,yDAAM,WAAO/L,GAAP,uBAAAC,EAAA,sEACZ8C,IAAQC,KADI,OAGA,KAF7B5C,EAD6B,QAGpBC,KAAKI,aAAmB,EACRL,EAASC,KAAKA,KAAlChB,EAD2B,EAC3BA,GAAI4D,EADuB,EACvBA,MAAOC,EADgB,EAChBA,MAChBlD,EAAS4L,GAAgBvM,EAAI6D,EAAOD,GAAO,KALd,2CAAN,uDAwBlBO,GAAgB,yDAAM,WAAOxD,GAAP,iBAAAC,EAAA,sEACRsD,IAAYC,gBADJ,OACzBpD,EADyB,OAEzBuL,EAAavL,EAASC,KAAK2L,IACjChM,EAAS8L,GAAqBH,IAHC,2CAAN,uDAgBdM,GA/DK,WAAmC,IAAlC3K,EAAiC,uDAAzBnC,GAAcoC,EAAW,uCAClD,OAAQA,EAAO3B,MACX,KAAK6L,GACL,KAAKC,GACD,OAAO,2BACApK,GACAC,EAAOsK,SAElB,QACI,OAAOvK,IClBb4K,G,uKAIE,OAAO,cAAC,GAAD,eAAYvB,KAAK/F,Y,GAJFiG,IAAMC,WAYrBE,gBALS,SAAC1J,GAAD,MAAY,CAChCkK,OAAQlK,EAAMP,KAAKyK,OACnBvI,MAAO3B,EAAMP,KAAKkC,SAGkB,CAACK,ODoDnB,yDAAM,WAAOtD,GAAP,SAAAC,EAAA,sEACH8C,IAAQO,SADL,OAGS,IAHT,OAGXjD,KAAKI,YACdT,EAAS4L,GAAgB,KAAM,KAAM,MAAM,IAJvB,2CAAN,wDCpDPZ,CAAmCkB,I,gDCc5CC,GAAiBC,aAAU,CAACC,KAAM,SAAjBD,EAtBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcjI,EAAuB,EAAvBA,MAAOsH,EAAgB,EAAhBA,WACrC,OACI,uBAAMY,SAAUD,EAAhB,UACKrH,aAAY,QAAS,QAAS,CAACuH,MAAWxH,MAC1CC,aAAY,WAAY,WAAY,CAACuH,MAAWxH,KAAO,CAACpF,KAAM,aAC9DqF,aAAY,KAAM,aAAc,GAAID,KAAO,CAACpF,KAAM,YAAa,mFAE9D+L,GAAc,qBAAKhC,IAAI,GAAGC,IAAK+B,IAC/BA,GAAe1G,aAAY,qBAAsB,UAAW,CAACuH,MAAWxH,KAAO,IAGhFX,GAAS,qBAAKG,UAAWiI,KAAMC,iBAAtB,SACLrI,IAGL,8BACI,sEA2BD2G,gBALS,SAAC1J,GAAD,MAAY,CAChCqK,WAAYrK,EAAMP,KAAK4K,WACvBH,OAAQlK,EAAMP,KAAKyK,UAGiB,CAACvI,MFNpB,SAACC,EAAOC,EAAUC,EAAYC,GAA9B,8CAA0C,WAAOrD,GAAP,iBAAAC,EAAA,sEACtC8C,IAAQE,MAAMC,EAAOC,EAAUC,EAAYC,GADL,OAE1B,KAD7BjD,EADuD,QAE9CC,KAAKI,WAEdT,EAAS+L,OAEwB,KAA7B3L,EAASC,KAAKI,YACdT,EAASwD,MAGTlE,EAAUc,EAASC,KAAKa,SAASyL,OAAS,EAAIvM,EAASC,KAAKa,SAAS,GAAK,aAC9ElB,EAASgB,aAAW,QAAS,CAACC,OAAQ3B,MAXiB,2CAA1C,wDEMN0L,EAnBD,SAACpG,GAKX,OAAIA,EAAM4G,OACC,cAAC,IAAD,CAAUxF,GAAI,aAGlB,sBAAKxB,UAAWiI,KAAMxJ,MAAtB,UACH,0DACA,cAACkJ,GAAD,CAAgBI,SAVH,SAAC3J,GACdgC,EAAM3B,MAAML,EAASM,MAAON,EAASO,SAAUP,EAASQ,WAAYR,EAASS,UASzCsI,WAAY/G,EAAM+G,mBC1CxDiB,GAAsB,sBAGxBzN,GAAe,CACf0N,aAAa,EACbC,YAAa,MA6BFC,GA1BI,WAAmC,IAAlCzL,EAAiC,uDAAzBnC,GAAcoC,EAAW,uCACjD,OAAQA,EAAO3B,MACX,KAAKgN,GACD,OAAO,2BACAtL,GADP,IAEIuL,aAAa,IAGrB,QACI,OAAOvL,I,oBCnBfnC,GAAe,GAMJ6N,GAJQ,WAAmC,IAAlC1L,EAAiC,uDAAzBnC,GAC5B,OAAOmC,G,oBCOP2L,GAAWC,aAAgB,CAC3BC,YAAa9L,KACb+L,YAAatJ,KACbuJ,QAASL,GACT5C,UAAWrC,EACXhH,KAAMkL,GACNI,KAAMiB,KACNC,IAAKR,KAIHS,GAAmBhI,OAAOiI,sCAAwC1C,KAClE2C,GAAQC,aAAYV,GAAWO,GAAiBI,aAAgBC,QACtErI,OAAOsI,UAAYJ,GAEJA,UCtBFK,GAAe,SAACjD,GACzB,OAAO,SAAClG,GACJ,OAAO,cAAC,IAAMoJ,SAAP,CAAgBC,SAAU,cAACrD,EAAA,EAAD,IAA1B,SACH,cAACE,EAAD,eAAelG,QCQrBsJ,GAAmBrD,IAAMsD,MAAK,kBAAM,iCACpCC,GAAmBvD,IAAMsD,MAAK,kBAAM,iCAGpCE,G,4MACFC,wBAA0B,SAACC,EAAQC,K,kEAG/B7D,KAAK/F,MAAM6J,gBACXjJ,OAAOkJ,iBAAiB,qBAAsB/D,KAAK2D,2B,6CAGnD9I,OAAOmJ,oBAAoB,qBAAsBhE,KAAK2D,2B,+BAItD,OAAK3D,KAAK/F,MAAMiI,YAKZ,sBAAKrI,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoK,OAAK,EAACC,KAAK,IACXC,OAAQ,kBAAM,cAAC,IAAD,CAAU9I,GAAI,gBAEnC,cAAC,IAAD,CAAO6I,KAAK,WACLC,OAAQf,GAAaG,MAE5B,cAAC,IAAD,CAAOW,KAAK,oBACLC,OAAQf,GAAaK,MAE5B,cAAC,IAAD,CAAOS,KAAK,SACLC,OAAQ,kBAAM,cAAC,GAAD,OAErB,cAAC,IAAD,CAAOD,KAAK,SACLC,OAAQ,kBAAM,cAAC,GAAD,OAErB,cAAC,IAAD,CAAOD,KAAK,IACLC,OAAQ,kBAAM,mCAzB1B,cAAClE,EAAA,EAAD,Q,GAbDE,aAmDdiE,GAAehE,aACfiE,IACAhE,aANoB,SAAC1J,GAAD,MAAY,CAChCuL,YAAavL,EAAMiM,IAAIV,eAKE,CAAC4B,cJ7CD,kBAAM,SAACzO,GAChC,IAAIwO,EAAUxO,EAAS+L,MAEvB5K,QAAQ8N,IAAI,CAACT,IACRnM,MAAK,WACFrC,EAP6B,CAACJ,KAAMgN,YI6C7B7B,CAE4BsD,IAUhCa,GARM,SAACtK,GAClB,OAAO,cAAC,IAAD,UACH,cAAC,IAAD,CAAU8I,MAAOA,GAAjB,SACI,cAACqB,GAAD,SCtEZI,IAASL,OAAO,cAAC,GAAD,IAAiBM,SAASC,eAAe,SnB2HnD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnN,MAAK,SAAAoN,GACjCA,EAAaC,iB,2CoBnIJ,G,KAAA,IAA0B,uC,OCW1B9E,IANC,SAAChG,GACb,OAAO,8BACH,qBAAKJ,UAAU,YAAYmF,IAAI,GAAGC,IAAK+F,Q,mBCN/C3L,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wCAAwC,MAAQ,+B,mBCA3KD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,wBAAwB,SAAW,0B,gCCDrG,oEAAO,IAAMuI,EAAW,SAAAoD,GACpB,IAAIA,EAEJ,MAAO,iEAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMjD,OAASmD,EAAW,MAAM,oDAAN,OAAmBA,EAAnB,wD,mBCNlC9L,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,mBCArHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,gCCDhD,QAA0B,mC","file":"static/js/main.af6ffa40.chunk.js","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Привет. Как дела?', likesCount: 12},\r\n        {id: 2, message: 'Привет', likesCount: 11},\r\n        {id: 3, message: 'изучаю react', likesCount: 11},\r\n        {id: 4, message: 'Компонентный подход', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"632990af-44d6-4e61-9765-9b22eb2ce873\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile );\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n}\n\n\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Олег'},\r\n        {id: 2, name: 'Андрей'},\r\n        {id: 3, name: 'Маша'},\r\n        {id: 4, name: 'Игорь'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Елена'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Привет'},\r\n        {id: 2, message: 'Как дела?'},\r\n        {id: 3, message: 'хай'},\r\n        {id: 4, message: 'Всем привет!'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__D3dx5\",\"item\":\"Navbar_item__1ZMbQ\",\"activeLink\":\"Navbar_activeLink__1ITpD\"};","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({ meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Профиль</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Сообщения</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Пользователи</NavLink>\r\n            </div>\r\n\r\n            {/* <div className={s.item}>\r\n                <a href=''>Новости</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=''>Музыка</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=''>Настройки</a>\r\n            </div> */}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={cn(styles.paginator)}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>{'<<'}</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>{'>>'}</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport { NavLink } from \"react-router-dom\";\n\n\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\n    return (\n        <div className={styles.cardUser}>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img alt='' src={user.photos.small != null ? user.photos.small : userPhoto}\n                            className={styles.userPhoto} />\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed\n                        ? <button disabled={followingInProgress\n                            .some(id => id === user.id)}\n                            onClick={() => { unfollow(user.id) }}>\n                            Убрать из друзей</button>\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => { follow(user.id) }}>\n                            Подписаться</button>}\n\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </span>\n                <span>\n                    <div>{\"user.location.country\"}</div>\n                    <div>{\"user.location.city\"}</div>\n                </span>\n            </span>\n        </div>)\n}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\nimport styles from \"./users.module.css\"\n\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div className={styles.cardInfo}>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress, requestUsers\n} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer)","export default __webpack_public_path__ + \"static/media/sn.4bee88f6.png\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport sn from '../../assets/images/sn.png'\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img alt='' src={sn} />\r\n\r\n        <div className={s.loginBlock}>\r\n    \r\n            { props.isAuth\r\n                ? <div>{props.login}- <button onClick={props.logout}>Выйти</button> </div>\r\n                : <NavLink to={'/login'}>\r\n                Авторизоваться</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null // if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        // success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport {reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Запомнить меня\")}\n\n            { captchaUrl && <img alt='' src={captchaUrl} />}\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Вход</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div className={style.login}>\n        <h1>Вход</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false,\n    globalError: null\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<Preloader />} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","import React, {Component} from 'react'\nimport './App.css'\nimport Navbar from './components/Navbar/Navbar'\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\"\nimport UsersContainer from \"./components/Users/UsersContainer\"\nimport HeaderContainer from \"./components/Header/HeaderContainer\"\nimport LoginPage from \"./components/Login/Login\"\nimport {connect, Provider} from \"react-redux\"\nimport {compose} from \"redux\"\nimport {initializeApp} from \"./redux/app-reducer\"\nimport Preloader from \"./components/common/Preloader/Preloader\"\nimport store from \"./redux/redux-store\"\nimport {withSuspense} from \"./hoc/withSuspense\"\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\n\nclass App extends Component {\n    catchAllUnhandledErrors = (reason, promise) => {\n    }\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/'\n                               render={() => <Redirect to={\"/profile\"}/>}/>\n\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n\n                        <Route path='/profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n\n                        <Route path='/login'\n                               render={() => <LoginPage/>}/>\n\n                        <Route path='*'\n                               render={() => <div></div>}/>\n                    </Switch>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App)\n\nconst SamuraiJSApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJSApp\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","export default __webpack_public_path__ + \"static/media/preloader.03155f95.svg\";","import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\nimport  './preloader.css'\n\n\nlet Preloader = (props) => {\n    return <div>\n        <img className='preloader' alt='' src={preloader}/>\n    </div>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2OJsI\",\"error\":\"FormsControls_error__1QBsb\",\"formSummaryError\":\"FormsControls_formSummaryError__2unt9\",\"login\":\"FormsControls_login__6u8S-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__dhcv3\",\"cardInfo\":\"users_cardInfo__1GiUP\",\"cardUser\":\"users_cardUser__GulH8\"};","export const required = value => {\n    if (value) return undefined;\n\n    return \"Пустое поле\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Максимум ${maxLength} символов`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__36_Ry\",\"pageNumber\":\"Paginator_pageNumber__3iVKI\",\"selectedPage\":\"Paginator_selectedPage__1ckc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2yBmq\",\"loginBlock\":\"Header_loginBlock__sTtS1\"};","export default __webpack_public_path__ + \"static/media/user.33c53d9a.png\";"],"sourceRoot":""}